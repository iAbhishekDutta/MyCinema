{"ast":null,"code":"import _objectSpread from \"A:\\\\Programs\\\\jali\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"A:\\\\Programs\\\\jali\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"A:\\\\Programs\\\\jali\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"A:\\\\Programs\\\\jali\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"A:\\\\Programs\\\\jali\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"A:\\\\Programs\\\\jali\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"A:\\\\Programs\\\\jali\\\\iCinema-master\\\\iCinema-master\\\\frontend\\\\src\\\\pages\\\\AddMovie\\\\index.js\";\nimport React from \"react\";\nimport Joi from \"@hapi/joi\";\nimport { connect } from \"react-redux\";\nimport Input from \"../../components/common/Input\";\nimport Select from \"../../components/common/Select\";\nimport { addMovie as _addMovie } from \"../../actions/moviesAction\";\nimport { movieSchema } from \"./schema\";\n\nvar AddMovieForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddMovieForm, _React$Component);\n\n  function AddMovieForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddMovieForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddMovieForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: {\n        title: \"\",\n        genre: \"\",\n        numberInStock: \"\",\n        description: \"\",\n        image: null\n      },\n      genres: [],\n      errors: {}\n    };\n\n    _this.handleChange = function (_ref) {\n      var input = _ref.currentTarget;\n\n      var data = _objectSpread({}, _this.state.data);\n\n      data[input.name] = input.value;\n\n      _this.setState({\n        data: data\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault(); //TODO: Validate property\n\n      var _Joi$validate = Joi.validate(_this.state, movieSchema),\n          error = _Joi$validate.error;\n\n      _this.setState({\n        errors: error\n      });\n\n      if (!error) _this.props.addMovie(_this.state.data);\n    };\n\n    _this.uploadImage = function (e) {\n      if (e.target.files[0]) {\n        var data = _objectSpread({}, _this.state.data);\n\n        data.image = e.target.files[0];\n\n        _this.setState({\n          data: data\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AddMovieForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          errors = _this$state.errors,\n          data = _this$state.data;\n      var title = data.title,\n          genre = data.genre,\n          numberInStock = data.numberInStock;\n      var genres = this.props.genres;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"background-container pt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, \"Add a new movie\"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        encType: \"multipart/form-data\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        name: \"title\",\n        value: title,\n        label: \"Title\",\n        onChange: this.handleChange,\n        placeholder: \"Enter the title...\",\n        error: errors[\"title\"],\n        iconClass: \"fas fa-film\",\n        autoFocus: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Select, {\n        name: \"genre\",\n        label: \"Genre\",\n        onChange: this.handleChange,\n        value: genre,\n        error: errors[\"genre\"],\n        options: genres,\n        iconClass: \"fas fa-address-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        name: \"numberInStock\",\n        label: \"Number In Stock\",\n        onChange: this.handleChange,\n        placeholder: \"Enter numbers the stock...\",\n        error: errors[\"numberInStock\"],\n        iconClass: \"fas fa-hashtag\",\n        value: numberInStock,\n        type: \"number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        name: \"image\",\n        label: \"Cover Image\",\n        onChange: this.uploadImage,\n        error: errors[\"coverImage\"],\n        iconClass: \"fas fa-file-image\",\n        accept: \"image/*\",\n        type: \"file\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        name: \"description\",\n        label: \"Description\",\n        placeholder: \"Enter description about this movie...\",\n        iconClass: \"fas fa-info\",\n        error: errors[\"description\"],\n        type: \"textarea\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return AddMovieForm;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dipatch) {\n  return {\n    addMovie: function addMovie(movie) {\n      return dipatch(_addMovie(movie));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    genres: state.genre.genres\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddMovieForm);","map":{"version":3,"sources":["A:/Programs/jali/iCinema-master/iCinema-master/frontend/src/pages/AddMovie/index.js"],"names":["React","Joi","connect","Input","Select","addMovie","movieSchema","AddMovieForm","state","data","title","genre","numberInStock","description","image","genres","errors","handleChange","input","currentTarget","name","value","setState","handleSubmit","e","preventDefault","validate","error","props","uploadImage","target","files","Component","mapDispatchToProps","dipatch","movie","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Joi from \"@hapi/joi\";\nimport { connect } from \"react-redux\";\n\nimport Input from \"../../components/common/Input\";\nimport Select from \"../../components/common/Select\";\nimport { addMovie } from \"../../actions/moviesAction\";\nimport { movieSchema } from \"./schema\";\n\nclass AddMovieForm extends React.Component {\n  state = {\n    data: {\n      title: \"\",\n      genre: \"\",\n      numberInStock: \"\",\n      description: \"\",\n      image: null,\n    },\n    genres: [],\n    errors: {},\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    //TODO: Validate property\n    const { error } = Joi.validate(this.state, movieSchema);\n    this.setState({ errors: error });\n    if (!error) this.props.addMovie(this.state.data);\n  };\n\n  uploadImage = (e) => {\n    if (e.target.files[0]) {\n      const data = { ...this.state.data };\n      data.image = e.target.files[0];\n      this.setState({ data });\n    }\n  };\n\n  render() {\n    const { errors, data } = this.state;\n    const { title, genre, numberInStock } = data;\n    const { genres } = this.props;\n\n    return (\n      <div className=\"background-container pt-5\">\n        <div className=\"container\">\n          <h1 className=\"header\">Add a new movie</h1>\n\n          <form onSubmit={this.handleSubmit} encType=\"multipart/form-data\">\n            <Input\n              name=\"title\"\n              value={title}\n              label=\"Title\"\n              onChange={this.handleChange}\n              placeholder=\"Enter the title...\"\n              error={errors[\"title\"]}\n              iconClass=\"fas fa-film\"\n              autoFocus\n            />\n\n            <Select\n              name=\"genre\"\n              label=\"Genre\"\n              onChange={this.handleChange}\n              value={genre}\n              error={errors[\"genre\"]}\n              options={genres}\n              iconClass=\"fas fa-address-card\"\n            />\n\n            <Input\n              name=\"numberInStock\"\n              label=\"Number In Stock\"\n              onChange={this.handleChange}\n              placeholder=\"Enter numbers the stock...\"\n              error={errors[\"numberInStock\"]}\n              iconClass=\"fas fa-hashtag\"\n              value={numberInStock}\n              type=\"number\"\n            />\n\n            <Input\n              name=\"image\"\n              label=\"Cover Image\"\n              onChange={this.uploadImage}\n              error={errors[\"coverImage\"]}\n              iconClass=\"fas fa-file-image\"\n              accept=\"image/*\"\n              type=\"file\"\n            />\n\n            <Input\n              name=\"description\"\n              label=\"Description\"\n              placeholder=\"Enter description about this movie...\"\n              iconClass=\"fas fa-info\"\n              error={errors[\"description\"]}\n              type=\"textarea\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = (dipatch) => {\n  return {\n    addMovie: (movie) => dipatch(addMovie(movie)),\n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    genres: state.genre.genres,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddMovieForm);\n\n"]},"metadata":{},"sourceType":"module"}